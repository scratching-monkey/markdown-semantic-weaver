{
  "name": "markdown-semantic-weaver",
  "displayName": "Markdown Semantic Weaver",
  "description": "Semantically combine markdown files",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.103.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "markdown-semantic-weaver.addSource",
        "title": "Add as Source"
      },
      {
        "command": "markdown-semantic-weaver.addDestination",
        "title": "Add as Destination",
        "icon": "$(add)"
      },
      {
        "command": "markdown-semantic-weaver.addContentBlock",
        "title": "Add Content Block",
        "icon": "$(add)"
      },
      {
        "command": "markdown-semantic-weaver.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "markdown-semantic-weaver.testCommand",
        "title": "Test Command"
      },
      {
        "command": "markdown-semantic-weaver.testEmbedding",
        "title": "Test Embedding Service"
      },
      {
        "command": "markdown-semantic-weaver.addNewDestinationDocument",
        "title": "Add New Destination Document",
        "icon": "$(add)"
      },
      {
        "command": "markdown-semantic-weaver.deleteDestinationDocument",
        "title": "Remove Destination Document",
        "icon": "$(trash)"
      },
      {
        "command": "markdown-semantic-weaver.deleteContentBlock",
        "title": "Delete Content Block",
        "icon": "$(trash)"
      },
      {
        "command": "markdown-semantic-weaver.editContentBlock",
        "title": "Edit Content Block",
        "icon": "$(edit)"
      },
      {
        "command": "markdown-semantic-weaver.insertSection",
        "title": "Insert Section",
        "icon": "$(add)"
      },
      {
        "command": "markdown-semantic-weaver.moveContentBlock",
        "title": "Move Content Block",
        "icon": "$(arrow-up)"
      },
      {
        "command": "markdown-semantic-weaver.openComparisonEditor",
        "title": "Compare Similar Sections",
        "icon": "$(diff)"
      },
      {
        "command": "markdown-semantic-weaver-comparison.insertSection",
        "title": "Insert Section"
      },
      {
        "command": "markdown-semantic-weaver-comparison.deleteSection",
        "title": "Delete Section"
      },
      {
        "command": "markdown-semantic-weaver-comparison.popSection",
        "title": "Pop Section from Group"
      },
      {
        "command": "markdown-semantic-weaver-comparison.mergeWithAI",
        "title": "Merge with AI",
        "enablement": "markdown-semantic-weaver.languageModelAvailable"
      },
      {
        "command": "markdown-semantic-weaver-comparison.refresh",
        "title": "Refresh Comparison View"
      },
      {
        "command": "markdown-semantic-weaver.openGlossaryEditor",
        "title": "Open Glossary Editor",
        "icon": "$(book)"
      },
      {
        "command": "markdown-semantic-weaver.previewDocument",
        "title": "Preview Document",
        "icon": "$(preview)"
      },
      {
        "command": "markdown-semantic-weaver.publishDocuments",
        "title": "Publish Documents",
        "icon": "$(export)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceLangId == markdown",
          "command": "markdown-semantic-weaver.addSource",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == markdown && !listMultiSelection",
          "command": "markdown-semantic-weaver.addDestination",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "markdown-semantic-weaver.addNewDestinationDocument",
          "when": "view == 'markdown-semantic-weaver.destinationDocuments'",
          "group": "navigation"
        },
        {
          "command": "markdown-semantic-weaver.publishDocuments",
          "when": "view == 'markdown-semantic-weaver.destinationDocuments' && markdown-semantic-weaver.sessionActive",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "markdown-semantic-weaver.deleteDestinationDocument",
          "when": "view == 'markdown-semantic-weaver.destinationDocuments' && viewItem == 'destinationDocument'",
          "group": "inline"
        },
        {
          "command": "markdown-semantic-weaver.deleteContentBlock",
          "when": "view == 'markdown-semantic-weaver.documentOutliner' && viewItem == 'contentBlock'",
          "group": "inline"
        },
        {
          "command": "markdown-semantic-weaver.editContentBlock",
          "when": "view == 'markdown-semantic-weaver.documentOutliner' && viewItem == 'contentBlock'",
          "group": "inline"
        },
        {
          "command": "markdown-semantic-weaver.addContentBlock",
          "when": "view == 'markdown-semantic-weaver.documentOutliner' && viewItem == 'contentBlock'",
          "group": "inline"
        },
        {
          "command": "markdown-semantic-weaver.insertSection",
          "when": "view == 'markdown-semantic-weaver.sections' && viewItem == 'section'",
          "group": "inline"
        },
        {
          "command": "markdown-semantic-weaver.openComparisonEditor",
          "when": "view == 'markdown-semantic-weaver.sections' && viewItem == 'similarityGroup'",
          "group": "inline"
        },
        {
          "command": "markdown-semantic-weaver.openGlossaryEditor",
          "when": "view == 'markdown-semantic-weaver.terms'",
          "group": "navigation"
        },
        {
          "command": "markdown-semantic-weaver.previewDocument",
          "when": "view == 'markdown-semantic-weaver.destinationDocuments' && viewItem == 'destinationDocument'",
          "group": "inline"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "markdown-semantic-weaver",
          "title": "Markdown Semantic Weaver",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "markdown-semantic-weaver": [
        {
          "id": "markdown-semantic-weaver.destinationDocuments",
          "name": "Destination Documents"
        },
        {
          "id": "markdown-semantic-weaver.documentOutliner",
          "name": "Outline"
        },
        {
          "id": "markdown-semantic-weaver.sections",
          "name": "Sections"
        },
        {
          "id": "markdown-semantic-weaver.terms",
          "name": "Terms"
        }
      ]
    },
    "configuration": {
      "title": "Markdown Semantic Weaver",
      "properties": {
        "markdown-semantic-weaver.logging.level": {
          "type": "string",
          "enum": [
            "trace",
            "info",
            "warn",
            "error"
          ],
          "default": "error",
          "description": "The logging level for the extension."
        },
        "markdown-semantic-weaver.performance.maxSourceCorpusSizeMB": {
          "type": "number",
          "default": 100,
          "minimum": 10,
          "maximum": 1000,
          "description": "Maximum size of source corpus in MB before showing performance warnings."
        },
        "markdown-semantic-weaver.preview.autoSave": {
          "type": "boolean",
          "default": true,
          "description": "Automatically save changes when editing content blocks."
        },
        "markdown-semantic-weaver.publish.confirmation": {
          "type": "boolean",
          "default": true,
          "description": "Show confirmation dialog before publishing documents."
        },
        "markdown-semantic-weaver.ai.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable AI-powered features like intelligent content merging. Requires GitHub Copilot or compatible language models."
        }
      }
    },
    "commandPalette": [
      {
        "command": "markdown-semantic-weaver.publishDocuments",
        "when": "markdown-semantic-weaver.sessionActive"
      }
    ],
    "walkthroughs": [
      {
        "id": "markdown-semantic-weaver.gettingStarted",
        "title": "Get Started with Markdown Semantic Weaver",
        "description": "Learn how to semantically combine and weave your Markdown documents",
        "steps": [
          {
            "id": "addSourceFiles",
            "title": "Add Source Files",
            "description": "Start by adding Markdown files as sources for analysis.\n[Add Source Files](command:markdown-semantic-weaver.addSource)",
            "media": {
              "markdown": "Right-click on Markdown files in the Explorer and select 'Add as Source' to begin semantic analysis."
            }
          },
          {
            "id": "createDestination",
            "title": "Create Destination Document",
            "description": "Create a new document where you'll weave together content from your sources.\n[Create New Destination](command:markdown-semantic-weaver.addNewDestinationDocument)",
            "media": {
              "markdown": "Use the 'Add New Destination Document' button in the Destination Documents view to create your output document."
            }
          },
          {
            "id": "weaveContent",
            "title": "Weave Content Together",
            "description": "Insert sections from your source files into your destination document.\n[View Sections](command:workbench.view.extension.markdown-semantic-weaver)",
            "media": {
              "markdown": "Browse similar sections in the Sections view and insert them into your destination document using the inline actions."
            }
          },
          {
            "id": "editAndRefine",
            "title": "Edit and Refine",
            "description": "Edit content blocks directly and resolve conflicts between similar sections.\n[Open Comparison Editor](command:markdown-semantic-weaver.openComparisonEditor)",
            "media": {
              "markdown": "Use the block editor for focused editing and the comparison editor to resolve similar sections."
            }
          },
          {
            "id": "previewAndPublish",
            "title": "Preview and Publish",
            "description": "Preview your final document and publish it to physical files.\n[Preview Document](command:markdown-semantic-weaver.previewDocument)\n[Publish Documents](command:markdown-semantic-weaver.publishDocuments)",
            "media": {
              "markdown": "Use Preview to see your document before publishing, then use Publish to create the final files."
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package 2>/dev/null || npm run package",
    "compile": "rimraf dist && webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "rimraf out && tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint --config eslint.config.mts src",
    "test": "xvfb-run vscode-test",
    "test:e2e": "npm run compile-tests && vscode-test --run out/test/e2e/golden-path.test.js",
    "test:e2e:ci": "npm run compile-tests && xvfb-run vscode-test --run out/test/e2e/golden-path.test.js",
    "clean": "rimraf dist out"
  },
  "devDependencies": {
    "@eslint/js": "^9.34.0",
    "@types/chai": "^4.3.14",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/sinon": "^17.0.4",
    "@types/unist": "^3.0.3",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "^1.103.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "@wdio/cli": "^8.46.0",
    "@wdio/mocha-framework": "^8.40.0",
    "@wdio/spec-reporter": "^8.40.0",
    "chai": "^4.3.10",
    "copy-webpack-plugin": "^13.0.1",
    "eslint": "^9.34.0",
    "globals": "^16.3.0",
    "jiti": "^2.5.1",
    "node-loader": "^2.1.0",
    "rimraf": "^6.0.1",
    "sinon": "^21.0.0",
    "ts-loader": "^9.5.4",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.41.0",
    "vscode-extension-tester": "^8.0.0",
    "wdio-vscode-service": "^6.1.3",
    "webdriverio": "^8.46.0",
    "webpack": "^5.101.0",
    "webpack-cli": "^6.0.1",
    "webpack-node-externals": "^3.0.0"
  },
  "overrides": {
    "axios": "^1.7.2"
  },
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": "limited"
    }
  },
  "dependencies": {
    "@types/follow-redirects": "^1.14.4",
    "@types/natural": "^5.1.5",
    "@vscode/extension-telemetry": "^1.0.0",
    "fastembed": "^1.1.0",
    "follow-redirects": "^1.15.11",
    "mdast-util-to-markdown": "^2.1.2",
    "natural": "^8.1.0",
    "reflect-metadata": "^0.2.2",
    "remark": "^15.0.1",
    "tsyringe": "^4.10.0",
    "unified": "^11.0.5",
    "unist-util-visit": "^5.0.0",
    "uuid": "^11.1.0",
    "vectra": "^0.11.1"
  }
}
